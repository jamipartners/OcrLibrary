program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.2"}, {"coremlc-version", "1429.0.0"}, {"coremltools-component-torch", "2.1.0+cu121"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 640, 640]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 640, 640]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<int32, []> var_18 = const()[name = tensor<string, []>("op_18"), val = tensor<int32, []>(1)];
            tensor<int32, []> var_19 = const()[name = tensor<string, []>("op_19"), val = tensor<int32, []>(2)];
            tensor<int32, [2]> var_57 = const()[name = tensor<string, []>("op_57"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_59 = const()[name = tensor<string, []>("op_59"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> model_model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> model_model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 640, 640]> cast_9 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_9")];
            tensor<fp16, [1, 16, 320, 320]> input_1_cast_fp16 = conv(bias = model_model_0_conv_bias_to_fp16, dilations = var_59, groups = var_18, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_57, weight = model_model_0_conv_weight_to_fp16, x = cast_9)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, [1, 16, 320, 320]> input_3_cast_fp16 = silu(x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_66 = const()[name = tensor<string, []>("op_66"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_68 = const()[name = tensor<string, []>("op_68"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 16, 3, 3]> model_model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_weight_to_fp16"), val = tensor<fp16, [32, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [32]> model_model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10432)))];
            tensor<fp16, [1, 32, 160, 160]> input_5_cast_fp16 = conv(bias = model_model_1_conv_bias_to_fp16, dilations = var_68, groups = var_18, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_66, weight = model_model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> input_7_cast_fp16 = silu(x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, [2]> var_79 = const()[name = tensor<string, []>("op_79"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_81 = const()[name = tensor<string, []>("op_81"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 32, 1, 1]> model_model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10560)))];
            tensor<fp16, [32]> model_model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12672)))];
            tensor<fp16, [1, 32, 160, 160]> input_9_cast_fp16 = conv(bias = model_model_2_cv1_conv_bias_to_fp16, dilations = var_81, groups = var_18, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_79, weight = model_model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> var_84_cast_fp16 = silu(x = input_9_cast_fp16)[name = tensor<string, []>("op_84_cast_fp16")];
            tensor<int32, [2]> var_85 = const()[name = tensor<string, []>("op_85"), val = tensor<int32, [2]>([16, 16])];
            tensor<int32, []> var_86_axis_0 = const()[name = tensor<string, []>("op_86_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 16, 160, 160]> var_86_cast_fp16_0, tensor<fp16, [1, 16, 160, 160]> var_86_cast_fp16_1 = split(axis = var_86_axis_0, split_sizes = var_85, x = var_84_cast_fp16)[name = tensor<string, []>("op_86_cast_fp16")];
            tensor<int32, [2]> var_94 = const()[name = tensor<string, []>("op_94"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_96 = const()[name = tensor<string, []>("op_96"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12800)))];
            tensor<fp16, [16]> model_model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17472)))];
            tensor<fp16, [1, 16, 160, 160]> input_13_cast_fp16 = conv(bias = model_model_2_m_0_cv1_conv_bias_to_fp16, dilations = var_96, groups = var_18, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_94, weight = model_model_2_m_0_cv1_conv_weight_to_fp16, x = var_86_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, [1, 16, 160, 160]> input_15_cast_fp16 = silu(x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_103 = const()[name = tensor<string, []>("op_103"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_105 = const()[name = tensor<string, []>("op_105"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17600)))];
            tensor<fp16, [16]> model_model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22272)))];
            tensor<fp16, [1, 16, 160, 160]> input_17_cast_fp16 = conv(bias = model_model_2_m_0_cv2_conv_bias_to_fp16, dilations = var_105, groups = var_18, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_103, weight = model_model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 16, 160, 160]> var_108_cast_fp16 = silu(x = input_17_cast_fp16)[name = tensor<string, []>("op_108_cast_fp16")];
            tensor<fp16, [1, 16, 160, 160]> var_109_cast_fp16 = add(x = var_86_cast_fp16_1, y = var_108_cast_fp16)[name = tensor<string, []>("op_109_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 48, 160, 160]> input_19_cast_fp16 = concat(axis = var_18, interleave = input_19_interleave_0, values = (var_86_cast_fp16_0, var_86_cast_fp16_1, var_109_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_115 = const()[name = tensor<string, []>("op_115"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_117 = const()[name = tensor<string, []>("op_117"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 48, 1, 1]> model_model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22400)))];
            tensor<fp16, [32]> model_model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25536)))];
            tensor<fp16, [1, 32, 160, 160]> input_21_cast_fp16 = conv(bias = model_model_2_cv2_conv_bias_to_fp16, dilations = var_117, groups = var_18, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_115, weight = model_model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> input_23_cast_fp16 = silu(x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_124 = const()[name = tensor<string, []>("op_124"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_126 = const()[name = tensor<string, []>("op_126"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 32, 3, 3]> model_model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25664)))];
            tensor<fp16, [64]> model_model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62592)))];
            tensor<fp16, [1, 64, 80, 80]> input_25_cast_fp16 = conv(bias = model_model_3_conv_bias_to_fp16, dilations = var_126, groups = var_18, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_124, weight = model_model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_27_cast_fp16 = silu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, [2]> var_139 = const()[name = tensor<string, []>("op_139"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_141 = const()[name = tensor<string, []>("op_141"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62784)))];
            tensor<fp16, [64]> model_model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71040)))];
            tensor<fp16, [1, 64, 80, 80]> input_29_cast_fp16 = conv(bias = model_model_4_cv1_conv_bias_to_fp16, dilations = var_141, groups = var_18, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_139, weight = model_model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_144_cast_fp16 = silu(x = input_29_cast_fp16)[name = tensor<string, []>("op_144_cast_fp16")];
            tensor<int32, [2]> var_145 = const()[name = tensor<string, []>("op_145"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_146_axis_0 = const()[name = tensor<string, []>("op_146_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 80, 80]> var_146_cast_fp16_0, tensor<fp16, [1, 32, 80, 80]> var_146_cast_fp16_1 = split(axis = var_146_axis_0, split_sizes = var_145, x = var_144_cast_fp16)[name = tensor<string, []>("op_146_cast_fp16")];
            tensor<int32, [2]> var_154 = const()[name = tensor<string, []>("op_154"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_156 = const()[name = tensor<string, []>("op_156"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71232)))];
            tensor<fp16, [32]> model_model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89728)))];
            tensor<fp16, [1, 32, 80, 80]> input_33_cast_fp16 = conv(bias = model_model_4_m_0_cv1_conv_bias_to_fp16, dilations = var_156, groups = var_18, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_154, weight = model_model_4_m_0_cv1_conv_weight_to_fp16, x = var_146_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_35_cast_fp16 = silu(x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_163 = const()[name = tensor<string, []>("op_163"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_165 = const()[name = tensor<string, []>("op_165"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89856)))];
            tensor<fp16, [32]> model_model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108352)))];
            tensor<fp16, [1, 32, 80, 80]> input_37_cast_fp16 = conv(bias = model_model_4_m_0_cv2_conv_bias_to_fp16, dilations = var_165, groups = var_18, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_163, weight = model_model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> var_168_cast_fp16 = silu(x = input_37_cast_fp16)[name = tensor<string, []>("op_168_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_39_cast_fp16 = add(x = var_146_cast_fp16_1, y = var_168_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_175 = const()[name = tensor<string, []>("op_175"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_177 = const()[name = tensor<string, []>("op_177"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108480)))];
            tensor<fp16, [32]> model_model_4_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126976)))];
            tensor<fp16, [1, 32, 80, 80]> input_41_cast_fp16 = conv(bias = model_model_4_m_1_cv1_conv_bias_to_fp16, dilations = var_177, groups = var_18, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_175, weight = model_model_4_m_1_cv1_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_43_cast_fp16 = silu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_184 = const()[name = tensor<string, []>("op_184"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_186 = const()[name = tensor<string, []>("op_186"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127104)))];
            tensor<fp16, [32]> model_model_4_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145600)))];
            tensor<fp16, [1, 32, 80, 80]> input_45_cast_fp16 = conv(bias = model_model_4_m_1_cv2_conv_bias_to_fp16, dilations = var_186, groups = var_18, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = var_184, weight = model_model_4_m_1_cv2_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> var_189_cast_fp16 = silu(x = input_45_cast_fp16)[name = tensor<string, []>("op_189_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> var_190_cast_fp16 = add(x = input_39_cast_fp16, y = var_189_cast_fp16)[name = tensor<string, []>("op_190_cast_fp16")];
            tensor<bool, []> input_47_interleave_0 = const()[name = tensor<string, []>("input_47_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 80, 80]> input_47_cast_fp16 = concat(axis = var_18, interleave = input_47_interleave_0, values = (var_146_cast_fp16_0, var_146_cast_fp16_1, input_39_cast_fp16, var_190_cast_fp16))[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_196 = const()[name = tensor<string, []>("op_196"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_198 = const()[name = tensor<string, []>("op_198"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 128, 1, 1]> model_model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145728)))];
            tensor<fp16, [64]> model_model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162176)))];
            tensor<fp16, [1, 64, 80, 80]> input_49_cast_fp16 = conv(bias = model_model_4_cv2_conv_bias_to_fp16, dilations = var_198, groups = var_18, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_196, weight = model_model_4_cv2_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_51_cast_fp16 = silu(x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_205 = const()[name = tensor<string, []>("op_205"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_207 = const()[name = tensor<string, []>("op_207"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 64, 3, 3]> model_model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162368)))];
            tensor<fp16, [128]> model_model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(309888)))];
            tensor<fp16, [1, 128, 40, 40]> input_53_cast_fp16 = conv(bias = model_model_5_conv_bias_to_fp16, dilations = var_207, groups = var_18, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = var_205, weight = model_model_5_conv_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_55_cast_fp16 = silu(x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_220 = const()[name = tensor<string, []>("op_220"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_222 = const()[name = tensor<string, []>("op_222"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 1, 1]> model_model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310208)))];
            tensor<fp16, [128]> model_model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343040)))];
            tensor<fp16, [1, 128, 40, 40]> input_57_cast_fp16 = conv(bias = model_model_6_cv1_conv_bias_to_fp16, dilations = var_222, groups = var_18, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_220, weight = model_model_6_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_225_cast_fp16 = silu(x = input_57_cast_fp16)[name = tensor<string, []>("op_225_cast_fp16")];
            tensor<int32, [2]> var_226 = const()[name = tensor<string, []>("op_226"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_227_axis_0 = const()[name = tensor<string, []>("op_227_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_227_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_227_cast_fp16_1 = split(axis = var_227_axis_0, split_sizes = var_226, x = var_225_cast_fp16)[name = tensor<string, []>("op_227_cast_fp16")];
            tensor<int32, [2]> var_235 = const()[name = tensor<string, []>("op_235"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_237 = const()[name = tensor<string, []>("op_237"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343360)))];
            tensor<fp16, [64]> model_model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417152)))];
            tensor<fp16, [1, 64, 40, 40]> input_61_cast_fp16 = conv(bias = model_model_6_m_0_cv1_conv_bias_to_fp16, dilations = var_237, groups = var_18, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = var_235, weight = model_model_6_m_0_cv1_conv_weight_to_fp16, x = var_227_cast_fp16_1)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_63_cast_fp16 = silu(x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_244 = const()[name = tensor<string, []>("op_244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_246 = const()[name = tensor<string, []>("op_246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417344)))];
            tensor<fp16, [64]> model_model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491136)))];
            tensor<fp16, [1, 64, 40, 40]> input_65_cast_fp16 = conv(bias = model_model_6_m_0_cv2_conv_bias_to_fp16, dilations = var_246, groups = var_18, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_244, weight = model_model_6_m_0_cv2_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_249_cast_fp16 = silu(x = input_65_cast_fp16)[name = tensor<string, []>("op_249_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_67_cast_fp16 = add(x = var_227_cast_fp16_1, y = var_249_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<int32, [2]> var_256 = const()[name = tensor<string, []>("op_256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_258 = const()[name = tensor<string, []>("op_258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491328)))];
            tensor<fp16, [64]> model_model_6_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565120)))];
            tensor<fp16, [1, 64, 40, 40]> input_69_cast_fp16 = conv(bias = model_model_6_m_1_cv1_conv_bias_to_fp16, dilations = var_258, groups = var_18, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_256, weight = model_model_6_m_1_cv1_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_71_cast_fp16 = silu(x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_265 = const()[name = tensor<string, []>("op_265"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_267 = const()[name = tensor<string, []>("op_267"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565312)))];
            tensor<fp16, [64]> model_model_6_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639104)))];
            tensor<fp16, [1, 64, 40, 40]> input_73_cast_fp16 = conv(bias = model_model_6_m_1_cv2_conv_bias_to_fp16, dilations = var_267, groups = var_18, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_265, weight = model_model_6_m_1_cv2_conv_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_270_cast_fp16 = silu(x = input_73_cast_fp16)[name = tensor<string, []>("op_270_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_271_cast_fp16 = add(x = input_67_cast_fp16, y = var_270_cast_fp16)[name = tensor<string, []>("op_271_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 40, 40]> input_75_cast_fp16 = concat(axis = var_18, interleave = input_75_interleave_0, values = (var_227_cast_fp16_0, var_227_cast_fp16_1, input_67_cast_fp16, var_271_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_277 = const()[name = tensor<string, []>("op_277"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_279 = const()[name = tensor<string, []>("op_279"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639296)))];
            tensor<fp16, [128]> model_model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(704896)))];
            tensor<fp16, [1, 128, 40, 40]> input_77_cast_fp16 = conv(bias = model_model_6_cv2_conv_bias_to_fp16, dilations = var_279, groups = var_18, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_277, weight = model_model_6_cv2_conv_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_79_cast_fp16 = silu(x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_286 = const()[name = tensor<string, []>("op_286"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_288 = const()[name = tensor<string, []>("op_288"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> model_model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(705216)))];
            tensor<fp16, [256]> model_model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295104)))];
            tensor<fp16, [1, 256, 20, 20]> input_81_cast_fp16 = conv(bias = model_model_7_conv_bias_to_fp16, dilations = var_288, groups = var_18, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_286, weight = model_model_7_conv_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_83_cast_fp16 = silu(x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_299 = const()[name = tensor<string, []>("op_299"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_301 = const()[name = tensor<string, []>("op_301"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> model_model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295680)))];
            tensor<fp16, [256]> model_model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1426816)))];
            tensor<fp16, [1, 256, 20, 20]> input_85_cast_fp16 = conv(bias = model_model_8_cv1_conv_bias_to_fp16, dilations = var_301, groups = var_18, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_299, weight = model_model_8_cv1_conv_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_304_cast_fp16 = silu(x = input_85_cast_fp16)[name = tensor<string, []>("op_304_cast_fp16")];
            tensor<int32, [2]> var_305 = const()[name = tensor<string, []>("op_305"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_306_axis_0 = const()[name = tensor<string, []>("op_306_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 20, 20]> var_306_cast_fp16_0, tensor<fp16, [1, 128, 20, 20]> var_306_cast_fp16_1 = split(axis = var_306_axis_0, split_sizes = var_305, x = var_304_cast_fp16)[name = tensor<string, []>("op_306_cast_fp16")];
            tensor<int32, [2]> var_314 = const()[name = tensor<string, []>("op_314"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_316 = const()[name = tensor<string, []>("op_316"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1427392)))];
            tensor<fp16, [128]> model_model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722368)))];
            tensor<fp16, [1, 128, 20, 20]> input_89_cast_fp16 = conv(bias = model_model_8_m_0_cv1_conv_bias_to_fp16, dilations = var_316, groups = var_18, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = var_314, weight = model_model_8_m_0_cv1_conv_weight_to_fp16, x = var_306_cast_fp16_1)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_91_cast_fp16 = silu(x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_323 = const()[name = tensor<string, []>("op_323"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_325 = const()[name = tensor<string, []>("op_325"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722688)))];
            tensor<fp16, [128]> model_model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017664)))];
            tensor<fp16, [1, 128, 20, 20]> input_93_cast_fp16 = conv(bias = model_model_8_m_0_cv2_conv_bias_to_fp16, dilations = var_325, groups = var_18, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = var_323, weight = model_model_8_m_0_cv2_conv_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_328_cast_fp16 = silu(x = input_93_cast_fp16)[name = tensor<string, []>("op_328_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_329_cast_fp16 = add(x = var_306_cast_fp16_1, y = var_328_cast_fp16)[name = tensor<string, []>("op_329_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_95_cast_fp16 = concat(axis = var_18, interleave = input_95_interleave_0, values = (var_306_cast_fp16_0, var_306_cast_fp16_1, var_329_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_335 = const()[name = tensor<string, []>("op_335"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_337 = const()[name = tensor<string, []>("op_337"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017984)))];
            tensor<fp16, [256]> model_model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2214656)))];
            tensor<fp16, [1, 256, 20, 20]> input_97_cast_fp16 = conv(bias = model_model_8_cv2_conv_bias_to_fp16, dilations = var_337, groups = var_18, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_335, weight = model_model_8_cv2_conv_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_99_cast_fp16 = silu(x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, [2]> var_346 = const()[name = tensor<string, []>("op_346"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_348 = const()[name = tensor<string, []>("op_348"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2215232)))];
            tensor<fp16, [128]> model_model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2280832)))];
            tensor<fp16, [1, 128, 20, 20]> input_101_cast_fp16 = conv(bias = model_model_9_cv1_conv_bias_to_fp16, dilations = var_348, groups = var_18, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_346, weight = model_model_9_cv1_conv_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_103_cast_fp16 = silu(x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_352 = const()[name = tensor<string, []>("op_352"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_353 = const()[name = tensor<string, []>("op_353"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_105_ceil_mode_0 = const()[name = tensor<string, []>("input_105_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> input_105_cast_fp16 = max_pool(ceil_mode = input_105_ceil_mode_0, kernel_sizes = var_352, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_353, x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_357 = const()[name = tensor<string, []>("op_357"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_358 = const()[name = tensor<string, []>("op_358"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_107_ceil_mode_0 = const()[name = tensor<string, []>("input_107_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> input_107_cast_fp16 = max_pool(ceil_mode = input_107_ceil_mode_0, kernel_sizes = var_357, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_358, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<int32, [2]> var_362 = const()[name = tensor<string, []>("op_362"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_363 = const()[name = tensor<string, []>("op_363"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_366_pad_type_0 = const()[name = tensor<string, []>("op_366_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_366_pad_0 = const()[name = tensor<string, []>("op_366_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_366_ceil_mode_0 = const()[name = tensor<string, []>("op_366_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> var_366_cast_fp16 = max_pool(ceil_mode = var_366_ceil_mode_0, kernel_sizes = var_362, pad = var_366_pad_0, pad_type = var_366_pad_type_0, strides = var_363, x = input_107_cast_fp16)[name = tensor<string, []>("op_366_cast_fp16")];
            tensor<bool, []> input_109_interleave_0 = const()[name = tensor<string, []>("input_109_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 20, 20]> input_109_cast_fp16 = concat(axis = var_18, interleave = input_109_interleave_0, values = (input_103_cast_fp16, input_105_cast_fp16, input_107_cast_fp16, var_366_cast_fp16))[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_372 = const()[name = tensor<string, []>("op_372"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_374 = const()[name = tensor<string, []>("op_374"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2281152)))];
            tensor<fp16, [256]> model_model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543360)))];
            tensor<fp16, [1, 256, 20, 20]> input_111_cast_fp16 = conv(bias = model_model_9_cv2_conv_bias_to_fp16, dilations = var_374, groups = var_18, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_372, weight = model_model_9_cv2_conv_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_113_cast_fp16 = silu(x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp32, []> var_379_scale_factor_height_0 = const()[name = tensor<string, []>("op_379_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_379_scale_factor_width_0 = const()[name = tensor<string, []>("op_379_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 40, 40]> var_379_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_379_scale_factor_height_0, scale_factor_width = var_379_scale_factor_width_0, x = input_113_cast_fp16)[name = tensor<string, []>("op_379_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_115_cast_fp16 = concat(axis = var_18, interleave = input_115_interleave_0, values = (var_379_cast_fp16, input_79_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_389 = const()[name = tensor<string, []>("op_389"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_391 = const()[name = tensor<string, []>("op_391"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 384, 1, 1]> model_model_12_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543936)))];
            tensor<fp16, [128]> model_model_12_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642304)))];
            tensor<fp16, [1, 128, 40, 40]> input_117_cast_fp16 = conv(bias = model_model_12_cv1_conv_bias_to_fp16, dilations = var_391, groups = var_18, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_389, weight = model_model_12_cv1_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_394_cast_fp16 = silu(x = input_117_cast_fp16)[name = tensor<string, []>("op_394_cast_fp16")];
            tensor<int32, [2]> var_395 = const()[name = tensor<string, []>("op_395"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_396_axis_0 = const()[name = tensor<string, []>("op_396_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_396_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_396_cast_fp16_1 = split(axis = var_396_axis_0, split_sizes = var_395, x = var_394_cast_fp16)[name = tensor<string, []>("op_396_cast_fp16")];
            tensor<int32, [2]> var_404 = const()[name = tensor<string, []>("op_404"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_406 = const()[name = tensor<string, []>("op_406"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_12_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642624)))];
            tensor<fp16, [64]> model_model_12_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716416)))];
            tensor<fp16, [1, 64, 40, 40]> input_121_cast_fp16 = conv(bias = model_model_12_m_0_cv1_conv_bias_to_fp16, dilations = var_406, groups = var_18, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_404, weight = model_model_12_m_0_cv1_conv_weight_to_fp16, x = var_396_cast_fp16_1)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_123_cast_fp16 = silu(x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_413 = const()[name = tensor<string, []>("op_413"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_12_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716608)))];
            tensor<fp16, [64]> model_model_12_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790400)))];
            tensor<fp16, [1, 64, 40, 40]> input_125_cast_fp16 = conv(bias = model_model_12_m_0_cv2_conv_bias_to_fp16, dilations = var_415, groups = var_18, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_413, weight = model_model_12_m_0_cv2_conv_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_418_cast_fp16 = silu(x = input_125_cast_fp16)[name = tensor<string, []>("op_418_cast_fp16")];
            tensor<bool, []> input_127_interleave_0 = const()[name = tensor<string, []>("input_127_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_127_cast_fp16 = concat(axis = var_18, interleave = input_127_interleave_0, values = (var_396_cast_fp16_0, var_396_cast_fp16_1, var_418_cast_fp16))[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_424 = const()[name = tensor<string, []>("op_424"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_426 = const()[name = tensor<string, []>("op_426"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_12_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790592)))];
            tensor<fp16, [128]> model_model_12_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2839808)))];
            tensor<fp16, [1, 128, 40, 40]> input_129_cast_fp16 = conv(bias = model_model_12_cv2_conv_bias_to_fp16, dilations = var_426, groups = var_18, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_424, weight = model_model_12_cv2_conv_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_131_cast_fp16 = silu(x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp32, []> var_431_scale_factor_height_0 = const()[name = tensor<string, []>("op_431_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_431_scale_factor_width_0 = const()[name = tensor<string, []>("op_431_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 128, 80, 80]> var_431_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_431_scale_factor_height_0, scale_factor_width = var_431_scale_factor_width_0, x = input_131_cast_fp16)[name = tensor<string, []>("op_431_cast_fp16")];
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 80, 80]> input_133_cast_fp16 = concat(axis = var_18, interleave = input_133_interleave_0, values = (var_431_cast_fp16, input_51_cast_fp16))[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, [2]> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_443 = const()[name = tensor<string, []>("op_443"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 192, 1, 1]> model_model_15_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2840128)))];
            tensor<fp16, [64]> model_model_15_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864768)))];
            tensor<fp16, [1, 64, 80, 80]> input_135_cast_fp16 = conv(bias = model_model_15_cv1_conv_bias_to_fp16, dilations = var_443, groups = var_18, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_441, weight = model_model_15_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_446_cast_fp16 = silu(x = input_135_cast_fp16)[name = tensor<string, []>("op_446_cast_fp16")];
            tensor<int32, [2]> var_447 = const()[name = tensor<string, []>("op_447"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_448_axis_0 = const()[name = tensor<string, []>("op_448_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 80, 80]> var_448_cast_fp16_0, tensor<fp16, [1, 32, 80, 80]> var_448_cast_fp16_1 = split(axis = var_448_axis_0, split_sizes = var_447, x = var_446_cast_fp16)[name = tensor<string, []>("op_448_cast_fp16")];
            tensor<int32, [2]> var_456 = const()[name = tensor<string, []>("op_456"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_15_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864960)))];
            tensor<fp16, [32]> model_model_15_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883456)))];
            tensor<fp16, [1, 32, 80, 80]> input_139_cast_fp16 = conv(bias = model_model_15_m_0_cv1_conv_bias_to_fp16, dilations = var_458, groups = var_18, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_456, weight = model_model_15_m_0_cv1_conv_weight_to_fp16, x = var_448_cast_fp16_1)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_141_cast_fp16 = silu(x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_465 = const()[name = tensor<string, []>("op_465"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_15_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883584)))];
            tensor<fp16, [32]> model_model_15_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902080)))];
            tensor<fp16, [1, 32, 80, 80]> input_143_cast_fp16 = conv(bias = model_model_15_m_0_cv2_conv_bias_to_fp16, dilations = var_467, groups = var_18, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_465, weight = model_model_15_m_0_cv2_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> var_470_cast_fp16 = silu(x = input_143_cast_fp16)[name = tensor<string, []>("op_470_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 80, 80]> input_145_cast_fp16 = concat(axis = var_18, interleave = input_145_interleave_0, values = (var_448_cast_fp16_0, var_448_cast_fp16_1, var_470_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<int32, [2]> var_476 = const()[name = tensor<string, []>("op_476"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_478 = const()[name = tensor<string, []>("op_478"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 96, 1, 1]> model_model_15_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902208)))];
            tensor<fp16, [64]> model_model_15_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914560)))];
            tensor<fp16, [1, 64, 80, 80]> input_147_cast_fp16 = conv(bias = model_model_15_cv2_conv_bias_to_fp16, dilations = var_478, groups = var_18, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_476, weight = model_model_15_cv2_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_149_cast_fp16 = silu(x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, [2]> var_485 = const()[name = tensor<string, []>("op_485"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_16_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914752)))];
            tensor<fp16, [64]> model_model_16_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988544)))];
            tensor<fp16, [1, 64, 40, 40]> input_151_cast_fp16 = conv(bias = model_model_16_conv_bias_to_fp16, dilations = var_487, groups = var_18, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_485, weight = model_model_16_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_490_cast_fp16 = silu(x = input_151_cast_fp16)[name = tensor<string, []>("op_490_cast_fp16")];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_153_cast_fp16 = concat(axis = var_18, interleave = input_153_interleave_0, values = (var_490_cast_fp16, input_131_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, [2]> var_500 = const()[name = tensor<string, []>("op_500"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_502 = const()[name = tensor<string, []>("op_502"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_18_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988736)))];
            tensor<fp16, [128]> model_model_18_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3037952)))];
            tensor<fp16, [1, 128, 40, 40]> input_155_cast_fp16 = conv(bias = model_model_18_cv1_conv_bias_to_fp16, dilations = var_502, groups = var_18, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_500, weight = model_model_18_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_505_cast_fp16 = silu(x = input_155_cast_fp16)[name = tensor<string, []>("op_505_cast_fp16")];
            tensor<int32, [2]> var_506 = const()[name = tensor<string, []>("op_506"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_507_axis_0 = const()[name = tensor<string, []>("op_507_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 40, 40]> var_507_cast_fp16_0, tensor<fp16, [1, 64, 40, 40]> var_507_cast_fp16_1 = split(axis = var_507_axis_0, split_sizes = var_506, x = var_505_cast_fp16)[name = tensor<string, []>("op_507_cast_fp16")];
            tensor<int32, [2]> var_515 = const()[name = tensor<string, []>("op_515"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_517 = const()[name = tensor<string, []>("op_517"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_18_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3038272)))];
            tensor<fp16, [64]> model_model_18_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [1, 64, 40, 40]> input_159_cast_fp16 = conv(bias = model_model_18_m_0_cv1_conv_bias_to_fp16, dilations = var_517, groups = var_18, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_515, weight = model_model_18_m_0_cv1_conv_weight_to_fp16, x = var_507_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_161_cast_fp16 = silu(x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_524 = const()[name = tensor<string, []>("op_524"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_526 = const()[name = tensor<string, []>("op_526"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_18_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112256)))];
            tensor<fp16, [64]> model_model_18_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186048)))];
            tensor<fp16, [1, 64, 40, 40]> input_163_cast_fp16 = conv(bias = model_model_18_m_0_cv2_conv_bias_to_fp16, dilations = var_526, groups = var_18, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_524, weight = model_model_18_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_529_cast_fp16 = silu(x = input_163_cast_fp16)[name = tensor<string, []>("op_529_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 40, 40]> input_165_cast_fp16 = concat(axis = var_18, interleave = input_165_interleave_0, values = (var_507_cast_fp16_0, var_507_cast_fp16_1, var_529_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<int32, [2]> var_535 = const()[name = tensor<string, []>("op_535"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_537 = const()[name = tensor<string, []>("op_537"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_18_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186240)))];
            tensor<fp16, [128]> model_model_18_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235456)))];
            tensor<fp16, [1, 128, 40, 40]> input_167_cast_fp16 = conv(bias = model_model_18_cv2_conv_bias_to_fp16, dilations = var_537, groups = var_18, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_535, weight = model_model_18_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_169_cast_fp16 = silu(x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<int32, [2]> var_544 = const()[name = tensor<string, []>("op_544"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_546 = const()[name = tensor<string, []>("op_546"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_19_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235776)))];
            tensor<fp16, [128]> model_model_19_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3530752)))];
            tensor<fp16, [1, 128, 20, 20]> input_171_cast_fp16 = conv(bias = model_model_19_conv_bias_to_fp16, dilations = var_546, groups = var_18, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_544, weight = model_model_19_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_549_cast_fp16 = silu(x = input_171_cast_fp16)[name = tensor<string, []>("op_549_cast_fp16")];
            tensor<bool, []> input_173_interleave_0 = const()[name = tensor<string, []>("input_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_173_cast_fp16 = concat(axis = var_18, interleave = input_173_interleave_0, values = (var_549_cast_fp16, input_113_cast_fp16))[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, [2]> var_559 = const()[name = tensor<string, []>("op_559"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_561 = const()[name = tensor<string, []>("op_561"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_21_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3531072)))];
            tensor<fp16, [256]> model_model_21_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3727744)))];
            tensor<fp16, [1, 256, 20, 20]> input_175_cast_fp16 = conv(bias = model_model_21_cv1_conv_bias_to_fp16, dilations = var_561, groups = var_18, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_559, weight = model_model_21_cv1_conv_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_564_cast_fp16 = silu(x = input_175_cast_fp16)[name = tensor<string, []>("op_564_cast_fp16")];
            tensor<int32, [2]> var_565 = const()[name = tensor<string, []>("op_565"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_566_axis_0 = const()[name = tensor<string, []>("op_566_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 20, 20]> var_566_cast_fp16_0, tensor<fp16, [1, 128, 20, 20]> var_566_cast_fp16_1 = split(axis = var_566_axis_0, split_sizes = var_565, x = var_564_cast_fp16)[name = tensor<string, []>("op_566_cast_fp16")];
            tensor<int32, [2]> var_574 = const()[name = tensor<string, []>("op_574"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_576 = const()[name = tensor<string, []>("op_576"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_21_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3728320)))];
            tensor<fp16, [128]> model_model_21_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023296)))];
            tensor<fp16, [1, 128, 20, 20]> input_179_cast_fp16 = conv(bias = model_model_21_m_0_cv1_conv_bias_to_fp16, dilations = var_576, groups = var_18, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_574, weight = model_model_21_m_0_cv1_conv_weight_to_fp16, x = var_566_cast_fp16_1)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_181_cast_fp16 = silu(x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<int32, [2]> var_583 = const()[name = tensor<string, []>("op_583"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_585 = const()[name = tensor<string, []>("op_585"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_21_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023616)))];
            tensor<fp16, [128]> model_model_21_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318592)))];
            tensor<fp16, [1, 128, 20, 20]> input_183_cast_fp16 = conv(bias = model_model_21_m_0_cv2_conv_bias_to_fp16, dilations = var_585, groups = var_18, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = var_583, weight = model_model_21_m_0_cv2_conv_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_588_cast_fp16 = silu(x = input_183_cast_fp16)[name = tensor<string, []>("op_588_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 20, 20]> input_185_cast_fp16 = concat(axis = var_18, interleave = input_185_interleave_0, values = (var_566_cast_fp16_0, var_566_cast_fp16_1, var_588_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<int32, [2]> var_594 = const()[name = tensor<string, []>("op_594"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_596 = const()[name = tensor<string, []>("op_596"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_21_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318912)))];
            tensor<fp16, [256]> model_model_21_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4515584)))];
            tensor<fp16, [1, 256, 20, 20]> input_187_cast_fp16 = conv(bias = model_model_21_cv2_conv_bias_to_fp16, dilations = var_596, groups = var_18, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_594, weight = model_model_21_cv2_conv_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_221_cast_fp16 = silu(x = input_187_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<int32, [2]> var_619 = const()[name = tensor<string, []>("op_619"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_621 = const()[name = tensor<string, []>("op_621"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4516160)))];
            tensor<fp16, [64]> model_model_22_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4589952)))];
            tensor<fp16, [1, 64, 80, 80]> input_189_cast_fp16 = conv(bias = model_model_22_cv2_0_0_conv_bias_to_fp16, dilations = var_621, groups = var_18, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_619, weight = model_model_22_cv2_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_191_cast_fp16 = silu(x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, [2]> var_628 = const()[name = tensor<string, []>("op_628"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_630 = const()[name = tensor<string, []>("op_630"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4590144)))];
            tensor<fp16, [64]> model_model_22_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4663936)))];
            tensor<fp16, [1, 64, 80, 80]> input_193_cast_fp16 = conv(bias = model_model_22_cv2_0_1_conv_bias_to_fp16, dilations = var_630, groups = var_18, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_628, weight = model_model_22_cv2_0_1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_195_cast_fp16 = silu(x = input_193_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<int32, [2]> var_636 = const()[name = tensor<string, []>("op_636"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_638 = const()[name = tensor<string, []>("op_638"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_640_pad_type_0 = const()[name = tensor<string, []>("op_640_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_640_pad_0 = const()[name = tensor<string, []>("op_640_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4664128)))];
            tensor<fp16, [64]> model_model_22_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672384)))];
            tensor<fp16, [1, 64, 80, 80]> var_640_cast_fp16 = conv(bias = model_model_22_cv2_0_2_bias_to_fp16, dilations = var_638, groups = var_18, pad = var_640_pad_0, pad_type = var_640_pad_type_0, strides = var_636, weight = model_model_22_cv2_0_2_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_640_cast_fp16")];
            tensor<int32, [2]> var_647 = const()[name = tensor<string, []>("op_647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672576)))];
            tensor<fp16, [64]> model_model_22_cv3_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746368)))];
            tensor<fp16, [1, 64, 80, 80]> input_197_cast_fp16 = conv(bias = model_model_22_cv3_0_0_conv_bias_to_fp16, dilations = var_649, groups = var_18, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_647, weight = model_model_22_cv3_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_199_cast_fp16 = silu(x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> var_656 = const()[name = tensor<string, []>("op_656"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_658 = const()[name = tensor<string, []>("op_658"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746560)))];
            tensor<fp16, [64]> model_model_22_cv3_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820352)))];
            tensor<fp16, [1, 64, 80, 80]> input_201_cast_fp16 = conv(bias = model_model_22_cv3_0_1_conv_bias_to_fp16, dilations = var_658, groups = var_18, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_656, weight = model_model_22_cv3_0_1_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_203_cast_fp16 = silu(x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<int32, [2]> var_664 = const()[name = tensor<string, []>("op_664"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_668_pad_type_0 = const()[name = tensor<string, []>("op_668_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_668_pad_0 = const()[name = tensor<string, []>("op_668_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_model_22_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820544)))];
            tensor<fp16, [1]> model_model_22_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.d54p+2])];
            tensor<fp16, [1, 1, 80, 80]> var_668_cast_fp16 = conv(bias = model_model_22_cv3_0_2_bias_to_fp16, dilations = var_666, groups = var_18, pad = var_668_pad_0, pad_type = var_668_pad_type_0, strides = var_664, weight = model_model_22_cv3_0_2_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_668_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 80, 80]> xi_1_cast_fp16 = concat(axis = var_18, interleave = xi_1_interleave_0, values = (var_640_cast_fp16, var_668_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<int32, [2]> var_677 = const()[name = tensor<string, []>("op_677"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_679 = const()[name = tensor<string, []>("op_679"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_model_22_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820736)))];
            tensor<fp16, [64]> model_model_22_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4968256)))];
            tensor<fp16, [1, 64, 40, 40]> input_205_cast_fp16 = conv(bias = model_model_22_cv2_1_0_conv_bias_to_fp16, dilations = var_679, groups = var_18, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = var_677, weight = model_model_22_cv2_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_207_cast_fp16 = silu(x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_688 = const()[name = tensor<string, []>("op_688"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4968448)))];
            tensor<fp16, [64]> model_model_22_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5042240)))];
            tensor<fp16, [1, 64, 40, 40]> input_209_cast_fp16 = conv(bias = model_model_22_cv2_1_1_conv_bias_to_fp16, dilations = var_688, groups = var_18, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = var_686, weight = model_model_22_cv2_1_1_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_211_cast_fp16 = silu(x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<int32, [2]> var_694 = const()[name = tensor<string, []>("op_694"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_696 = const()[name = tensor<string, []>("op_696"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_698_pad_type_0 = const()[name = tensor<string, []>("op_698_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_698_pad_0 = const()[name = tensor<string, []>("op_698_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5042432)))];
            tensor<fp16, [64]> model_model_22_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5050688)))];
            tensor<fp16, [1, 64, 40, 40]> var_698_cast_fp16 = conv(bias = model_model_22_cv2_1_2_bias_to_fp16, dilations = var_696, groups = var_18, pad = var_698_pad_0, pad_type = var_698_pad_type_0, strides = var_694, weight = model_model_22_cv2_1_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_698_cast_fp16")];
            tensor<int32, [2]> var_705 = const()[name = tensor<string, []>("op_705"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_707 = const()[name = tensor<string, []>("op_707"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_model_22_cv3_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5050880)))];
            tensor<fp16, [64]> model_model_22_cv3_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5198400)))];
            tensor<fp16, [1, 64, 40, 40]> input_213_cast_fp16 = conv(bias = model_model_22_cv3_1_0_conv_bias_to_fp16, dilations = var_707, groups = var_18, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = var_705, weight = model_model_22_cv3_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_215_cast_fp16 = silu(x = input_213_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<int32, [2]> var_714 = const()[name = tensor<string, []>("op_714"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_716 = const()[name = tensor<string, []>("op_716"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5198592)))];
            tensor<fp16, [64]> model_model_22_cv3_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272384)))];
            tensor<fp16, [1, 64, 40, 40]> input_217_cast_fp16 = conv(bias = model_model_22_cv3_1_1_conv_bias_to_fp16, dilations = var_716, groups = var_18, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = var_714, weight = model_model_22_cv3_1_1_conv_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_219_cast_fp16 = silu(x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<int32, [2]> var_722 = const()[name = tensor<string, []>("op_722"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_724 = const()[name = tensor<string, []>("op_724"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_726_pad_type_0 = const()[name = tensor<string, []>("op_726_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_726_pad_0 = const()[name = tensor<string, []>("op_726_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_model_22_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272576)))];
            tensor<fp16, [1]> model_model_22_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.7c8p+2])];
            tensor<fp16, [1, 1, 40, 40]> var_726_cast_fp16 = conv(bias = model_model_22_cv3_1_2_bias_to_fp16, dilations = var_724, groups = var_18, pad = var_726_pad_0, pad_type = var_726_pad_type_0, strides = var_722, weight = model_model_22_cv3_1_2_weight_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("op_726_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 40, 40]> xi_3_cast_fp16 = concat(axis = var_18, interleave = xi_3_interleave_0, values = (var_698_cast_fp16, var_726_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<int32, [2]> var_735 = const()[name = tensor<string, []>("op_735"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_737 = const()[name = tensor<string, []>("op_737"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_model_22_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5272768)))];
            tensor<fp16, [64]> model_model_22_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5567744)))];
            tensor<fp16, [1, 64, 20, 20]> input_223_cast_fp16 = conv(bias = model_model_22_cv2_2_0_conv_bias_to_fp16, dilations = var_737, groups = var_18, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_735, weight = model_model_22_cv2_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_225_cast_fp16 = silu(x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> var_744 = const()[name = tensor<string, []>("op_744"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5567936)))];
            tensor<fp16, [64]> model_model_22_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5641728)))];
            tensor<fp16, [1, 64, 20, 20]> input_227_cast_fp16 = conv(bias = model_model_22_cv2_2_1_conv_bias_to_fp16, dilations = var_746, groups = var_18, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_744, weight = model_model_22_cv2_2_1_conv_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_229_cast_fp16 = silu(x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<int32, [2]> var_752 = const()[name = tensor<string, []>("op_752"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_754 = const()[name = tensor<string, []>("op_754"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_756_pad_type_0 = const()[name = tensor<string, []>("op_756_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_756_pad_0 = const()[name = tensor<string, []>("op_756_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5641920)))];
            tensor<fp16, [64]> model_model_22_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5650176)))];
            tensor<fp16, [1, 64, 20, 20]> var_756_cast_fp16 = conv(bias = model_model_22_cv2_2_2_bias_to_fp16, dilations = var_754, groups = var_18, pad = var_756_pad_0, pad_type = var_756_pad_type_0, strides = var_752, weight = model_model_22_cv2_2_2_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("op_756_cast_fp16")];
            tensor<int32, [2]> var_763 = const()[name = tensor<string, []>("op_763"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_765 = const()[name = tensor<string, []>("op_765"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_model_22_cv3_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5650368)))];
            tensor<fp16, [64]> model_model_22_cv3_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5945344)))];
            tensor<fp16, [1, 64, 20, 20]> input_231_cast_fp16 = conv(bias = model_model_22_cv3_2_0_conv_bias_to_fp16, dilations = var_765, groups = var_18, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_763, weight = model_model_22_cv3_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_233_cast_fp16 = silu(x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<int32, [2]> var_772 = const()[name = tensor<string, []>("op_772"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_774 = const()[name = tensor<string, []>("op_774"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5945536)))];
            tensor<fp16, [64]> model_model_22_cv3_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019328)))];
            tensor<fp16, [1, 64, 20, 20]> input_235_cast_fp16 = conv(bias = model_model_22_cv3_2_1_conv_bias_to_fp16, dilations = var_774, groups = var_18, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = var_772, weight = model_model_22_cv3_2_1_conv_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_237_cast_fp16 = silu(x = input_235_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<int32, [2]> var_780 = const()[name = tensor<string, []>("op_780"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_784_pad_type_0 = const()[name = tensor<string, []>("op_784_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_784_pad_0 = const()[name = tensor<string, []>("op_784_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 64, 1, 1]> model_model_22_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019520)))];
            tensor<fp16, [1]> model_model_22_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.218p+2])];
            tensor<fp16, [1, 1, 20, 20]> var_784_cast_fp16 = conv(bias = model_model_22_cv3_2_2_bias_to_fp16, dilations = var_782, groups = var_18, pad = var_784_pad_0, pad_type = var_784_pad_type_0, strides = var_780, weight = model_model_22_cv3_2_2_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("op_784_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 20, 20]> xi_cast_fp16 = concat(axis = var_18, interleave = xi_interleave_0, values = (var_756_cast_fp16, var_784_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_788 = const()[name = tensor<string, []>("op_788"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 6400]> var_789_cast_fp16 = reshape(shape = var_788, x = xi_1_cast_fp16)[name = tensor<string, []>("op_789_cast_fp16")];
            tensor<int32, [3]> var_790 = const()[name = tensor<string, []>("op_790"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 1600]> var_791_cast_fp16 = reshape(shape = var_790, x = xi_3_cast_fp16)[name = tensor<string, []>("op_791_cast_fp16")];
            tensor<int32, [3]> var_792 = const()[name = tensor<string, []>("op_792"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 400]> var_793_cast_fp16 = reshape(shape = var_792, x = xi_cast_fp16)[name = tensor<string, []>("op_793_cast_fp16")];
            tensor<bool, []> var_795_interleave_0 = const()[name = tensor<string, []>("op_795_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 8400]> var_795_cast_fp16 = concat(axis = var_19, interleave = var_795_interleave_0, values = (var_789_cast_fp16, var_791_cast_fp16, var_793_cast_fp16))[name = tensor<string, []>("op_795_cast_fp16")];
            tensor<int32, [2]> var_796 = const()[name = tensor<string, []>("op_796"), val = tensor<int32, [2]>([64, 1])];
            tensor<int32, []> var_797_axis_0 = const()[name = tensor<string, []>("op_797_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 8400]> var_797_cast_fp16_0, tensor<fp16, [1, 1, 8400]> var_797_cast_fp16_1 = split(axis = var_797_axis_0, split_sizes = var_796, x = var_795_cast_fp16)[name = tensor<string, []>("op_797_cast_fp16")];
            tensor<int32, [4]> var_803 = const()[name = tensor<string, []>("op_803"), val = tensor<int32, [4]>([1, 4, 16, 8400])];
            tensor<fp16, [1, 4, 16, 8400]> var_804_cast_fp16 = reshape(shape = var_803, x = var_797_cast_fp16_0)[name = tensor<string, []>("op_804_cast_fp16")];
            tensor<int32, [4]> var_805_perm_0 = const()[name = tensor<string, []>("op_805_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 8400]> transpose_1 = transpose(perm = var_805_perm_0, x = var_804_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 16, 4, 8400]> input_cast_fp16 = softmax(axis = var_18, x = transpose_1)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_808 = const()[name = tensor<string, []>("op_808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_810 = const()[name = tensor<string, []>("op_810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_812_pad_type_0 = const()[name = tensor<string, []>("op_812_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_812_pad_0 = const()[name = tensor<string, []>("op_812_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_model_22_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019712)))];
            tensor<fp16, [1, 1, 4, 8400]> var_812_cast_fp16 = conv(dilations = var_810, groups = var_18, pad = var_812_pad_0, pad_type = var_812_pad_type_0, strides = var_808, weight = model_model_22_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_812_cast_fp16")];
            tensor<int32, [3]> var_813 = const()[name = tensor<string, []>("op_813"), val = tensor<int32, [3]>([1, 4, 8400])];
            tensor<fp16, [1, 4, 8400]> distance_cast_fp16 = reshape(shape = var_813, x = var_812_cast_fp16)[name = tensor<string, []>("distance_cast_fp16")];
            tensor<int32, [2]> var_816_split_sizes_0 = const()[name = tensor<string, []>("op_816_split_sizes_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_816_axis_0 = const()[name = tensor<string, []>("op_816_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 8400]> var_816_cast_fp16_0, tensor<fp16, [1, 2, 8400]> var_816_cast_fp16_1 = split(axis = var_816_axis_0, split_sizes = var_816_split_sizes_0, x = distance_cast_fp16)[name = tensor<string, []>("op_816_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6019840)))];
            tensor<fp16, [1, 2, 8400]> x1y1_cast_fp16 = sub(x = anchor_points_to_fp16, y = var_816_cast_fp16_0)[name = tensor<string, []>("x1y1_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> x2y2_cast_fp16 = add(x = anchor_points_to_fp16, y = var_816_cast_fp16_1)[name = tensor<string, []>("x2y2_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> var_820_cast_fp16 = add(x = x1y1_cast_fp16, y = x2y2_cast_fp16)[name = tensor<string, []>("op_820_cast_fp16")];
            tensor<fp16, []> _inversed_c_xy_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_c_xy_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 8400]> _inversed_c_xy_cast_fp16 = mul(x = var_820_cast_fp16, y = _inversed_c_xy_y_0_to_fp16)[name = tensor<string, []>("_inversed_c_xy_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> wh_cast_fp16 = sub(x = x2y2_cast_fp16, y = x1y1_cast_fp16)[name = tensor<string, []>("wh_cast_fp16")];
            tensor<bool, []> var_825_interleave_0 = const()[name = tensor<string, []>("op_825_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 8400]> var_825_cast_fp16 = concat(axis = var_18, interleave = var_825_interleave_0, values = (_inversed_c_xy_cast_fp16, wh_cast_fp16))[name = tensor<string, []>("op_825_cast_fp16")];
            tensor<fp16, [1, 8400]> var_7_to_fp16 = const()[name = tensor<string, []>("op_7_to_fp16"), val = tensor<fp16, [1, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6053504)))];
            tensor<fp16, [1, 4, 8400]> dbox_cast_fp16 = mul(x = var_825_cast_fp16, y = var_7_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 1, 8400]> var_827_cast_fp16 = sigmoid(x = var_797_cast_fp16_1)[name = tensor<string, []>("op_827_cast_fp16")];
            tensor<bool, []> var_829_interleave_0 = const()[name = tensor<string, []>("op_829_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 5, 8400]> var_829_cast_fp16 = concat(axis = var_18, interleave = var_829_interleave_0, values = (dbox_cast_fp16, var_827_cast_fp16))[name = tensor<string, []>("op_829_cast_fp16")];
            tensor<int32, [3]> var_832_begin_0 = const()[name = tensor<string, []>("op_832_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_832_end_0 = const()[name = tensor<string, []>("op_832_end_0"), val = tensor<int32, [3]>([1, 5, 8400])];
            tensor<bool, [3]> var_832_end_mask_0 = const()[name = tensor<string, []>("op_832_end_mask_0"), val = tensor<bool, [3]>([false, true, true])];
            tensor<bool, [3]> var_832_squeeze_mask_0 = const()[name = tensor<string, []>("op_832_squeeze_mask_0"), val = tensor<bool, [3]>([true, false, false])];
            tensor<fp16, [5, 8400]> var_832_cast_fp16 = slice_by_index(begin = var_832_begin_0, end = var_832_end_0, end_mask = var_832_end_mask_0, squeeze_mask = var_832_squeeze_mask_0, x = var_829_cast_fp16)[name = tensor<string, []>("op_832_cast_fp16")];
            tensor<int32, [2]> var_835_perm_0 = const()[name = tensor<string, []>("op_835_perm_0"), val = tensor<int32, [2]>([1, 0])];
            tensor<int32, [2]> var_838 = const()[name = tensor<string, []>("op_838"), val = tensor<int32, [2]>([4, 1])];
            tensor<int32, []> var_840_axis_0 = const()[name = tensor<string, []>("op_840_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [8400, 5]> transpose_0 = transpose(perm = var_835_perm_0, x = var_832_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [8400, 4]> var_840_cast_fp16_0, tensor<fp16, [8400, 1]> var_840_cast_fp16_1 = split(axis = var_840_axis_0, split_sizes = var_838, x = transpose_0)[name = tensor<string, []>("op_840_cast_fp16")];
            tensor<string, []> var_840_cast_fp16_1_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_840_cast_fp16_1_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, []> var_843_to_fp16 = const()[name = tensor<string, []>("op_843_to_fp16"), val = tensor<fp16, []>(0x1.998p-10)];
            tensor<fp16, [8400, 4]> var_844_cast_fp16 = mul(x = var_840_cast_fp16_0, y = var_843_to_fp16)[name = tensor<string, []>("op_844_cast_fp16")];
            tensor<string, []> var_844_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_844_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [8400, 4]> var_844 = cast(dtype = var_844_cast_fp16_to_fp32_dtype_0, x = var_844_cast_fp16)[name = tensor<string, []>("cast_7")];
            tensor<fp32, [8400, 1]> var_840_1 = cast(dtype = var_840_cast_fp16_1_to_fp32_dtype_0, x = var_840_cast_fp16_1)[name = tensor<string, []>("cast_8")];
        } -> (var_840_1, var_844);
}